# put on hold until i can find a better way to compute colors, probably semi-manually
import json
from PIL import Image
import re
items = {"item-unknown": "__core__/graphics/icons/unknown.png","stone-brick": "__base__/graphics/icons/stone-brick.png","wood": "__base__/graphics/icons/wood.png","coal": "__base__/graphics/icons/coal.png","stone": "__base__/graphics/icons/stone.png","iron-ore": "__base__/graphics/icons/iron-ore.png","copper-ore": "__base__/graphics/icons/copper-ore.png","iron-plate": "__base__/graphics/icons/iron-plate.png","copper-plate": "__base__/graphics/icons/copper-plate.png","copper-cable": "__base__/graphics/icons/copper-cable.png","iron-stick": "__base__/graphics/icons/iron-stick.png","iron-gear-wheel": "__base__/graphics/icons/iron-gear-wheel.png","electronic-circuit": "__base__/graphics/icons/electronic-circuit.png","wooden-chest": "__base__/graphics/icons/wooden-chest.png","stone-furnace": "__base__/graphics/icons/stone-furnace.png","burner-mining-drill": "__base__/graphics/icons/burner-mining-drill.png","electric-mining-drill": "__base__/graphics/icons/electric-mining-drill.png","burner-inserter": "__base__/graphics/icons/burner-inserter.png","inserter": "__base__/graphics/icons/inserter.png","fast-inserter": "__base__/graphics/icons/fast-inserter.png","filter-inserter": "__base__/graphics/icons/filter-inserter.png","long-handed-inserter": "__base__/graphics/icons/long-handed-inserter.png","offshore-pump": "__base__/graphics/icons/offshore-pump.png","pipe": "__base__/graphics/icons/pipe.png","boiler": "__base__/graphics/icons/boiler.png","steam-engine": "__base__/graphics/icons/steam-engine.png","small-electric-pole": "__base__/graphics/icons/small-electric-pole.png","radar": "__base__/graphics/icons/radar.png","small-lamp": "__base__/graphics/icons/small-lamp.png","pipe-to-ground": "__base__/graphics/icons/pipe-to-ground.png","assembling-machine-1": "__base__/graphics/icons/assembling-machine-1.png","assembling-machine-2": "__base__/graphics/icons/assembling-machine-2.png","red-wire": "__base__/graphics/icons/red-wire.png","green-wire": "__base__/graphics/icons/green-wire.png","stone-wall": "__base__/graphics/icons/wall.png","lab": "__base__/graphics/icons/lab.png","steel-plate": "__base__/graphics/icons/steel-plate.png","engine-unit": "__base__/graphics/icons/engine-unit.png","electric-furnace": "__base__/graphics/icons/electric-furnace.png","solid-fuel": "__base__/graphics/icons/solid-fuel.png","rocket-fuel": "__base__/graphics/icons/rocket-fuel.png","iron-chest": "__base__/graphics/icons/iron-chest.png","big-electric-pole": "__base__/graphics/icons/big-electric-pole.png","medium-electric-pole": "__base__/graphics/icons/medium-electric-pole.png","steel-furnace": "__base__/graphics/icons/steel-furnace.png","gate": "__base__/graphics/icons/gate.png","steel-chest": "__base__/graphics/icons/steel-chest.png","solar-panel": "__base__/graphics/icons/solar-panel.png","train-stop": "__base__/graphics/icons/train-stop.png","rail-signal": "__base__/graphics/icons/rail-signal.png","rail-chain-signal": "__base__/graphics/icons/rail-chain-signal.png","concrete": "__base__/graphics/icons/concrete.png","refined-concrete": "__base__/graphics/icons/refined-concrete.png","hazard-concrete": "__base__/graphics/icons/hazard-concrete.png","refined-hazard-concrete": "__base__/graphics/icons/refined-hazard-concrete.png","landfill": "__base__/graphics/icons/landfill.png","accumulator": "__base__/graphics/icons/accumulator.png","uranium-ore": "__base__/graphics/icons/uranium-ore.png","transport-belt": "__base__/graphics/icons/transport-belt.png","fast-transport-belt": "__base__/graphics/icons/fast-transport-belt.png","express-transport-belt": "__base__/graphics/icons/express-transport-belt.png","stack-inserter": "__base__/graphics/icons/stack-inserter.png","stack-filter-inserter": "__base__/graphics/icons/stack-filter-inserter.png","assembling-machine-3": "__base__/graphics/icons/assembling-machine-3.png","player-port": "__base__/graphics/icons/player-port.png","underground-belt": "__base__/graphics/icons/underground-belt.png","fast-underground-belt": "__base__/graphics/icons/fast-underground-belt.png","express-underground-belt": "__base__/graphics/icons/express-underground-belt.png","splitter": "__base__/graphics/icons/splitter.png","fast-splitter": "__base__/graphics/icons/fast-splitter.png","express-splitter": "__base__/graphics/icons/express-splitter.png","loader": "__base__/graphics/icons/loader.png","fast-loader": "__base__/graphics/icons/fast-loader.png","express-loader": "__base__/graphics/icons/express-loader.png","advanced-circuit": "__base__/graphics/icons/advanced-circuit.png","processing-unit": "__base__/graphics/icons/processing-unit.png","logistic-robot": "__base__/graphics/icons/logistic-robot.png","construction-robot": "__base__/graphics/icons/construction-robot.png","logistic-chest-passive-provider": "__base__/graphics/icons/logistic-chest-passive-provider.png","logistic-chest-active-provider": "__base__/graphics/icons/logistic-chest-active-provider.png","logistic-chest-storage": "__base__/graphics/icons/logistic-chest-storage.png","logistic-chest-buffer": "__base__/graphics/icons/logistic-chest-buffer.png","logistic-chest-requester": "__base__/graphics/icons/logistic-chest-requester.png","rocket-silo": "__base__/graphics/icons/rocket-silo.png","roboport": "__base__/graphics/icons/roboport.png","coin": "__base__/graphics/icons/coin.png","substation": "__base__/graphics/icons/substation.png","beacon": "__base__/graphics/icons/beacon.png","storage-tank": "__base__/graphics/icons/storage-tank.png","pump": "__base__/graphics/icons/pump.png","pumpjack": "__base__/graphics/icons/pumpjack.png","oil-refinery": "__base__/graphics/icons/oil-refinery.png","chemical-plant": "__base__/graphics/icons/chemical-plant.png","sulfur": "__base__/graphics/icons/sulfur.png","empty-barrel": "__base__/graphics/icons/fluid/barreling/empty-barrel.png","plastic-bar": "__base__/graphics/icons/plastic-bar.png","electric-engine-unit": "__base__/graphics/icons/electric-engine-unit.png","explosives": "__base__/graphics/icons/explosives.png","battery": "__base__/graphics/icons/battery.png","flying-robot-frame": "__base__/graphics/icons/flying-robot-frame.png","low-density-structure": "__base__/graphics/icons/low-density-structure.png","nuclear-fuel": "__base__/graphics/icons/nuclear-fuel.png","rocket-control-unit": "__base__/graphics/icons/rocket-control-unit.png","rocket-part": "__base__/graphics/icons/rocket-part.png","satellite": "__base__/graphics/icons/satellite.png","heat-interface": "__base__/graphics/icons/heat-interface.png","nuclear-reactor": "__base__/graphics/icons/nuclear-reactor.png","uranium-235": "__base__/graphics/icons/uranium-235.png","uranium-238": "__base__/graphics/icons/uranium-238.png","centrifuge": "__base__/graphics/icons/centrifuge.png","uranium-fuel-cell": "__base__/graphics/icons/uranium-fuel-cell.png","used-up-uranium-fuel-cell": "__base__/graphics/icons/used-up-uranium-fuel-cell.png","heat-exchanger": "__base__/graphics/icons/heat-boiler.png","steam-turbine": "__base__/graphics/icons/steam-turbine.png","heat-pipe": "__base__/graphics/icons/heat-pipe.png","simple-entity-with-force": "__base__/graphics/icons/steel-chest.png","simple-entity-with-owner": "__base__/graphics/icons/wooden-chest.png","infinity-chest": "__base__/graphics/icons/infinity-chest.png","burner-generator": "__base__/graphics/icons/steam-engine.png","linked-chest": "__base__/graphics/icons/linked-chest-icon.png","linked-belt": "__base__/graphics/icons/linked-belt.png","land-mine": "__base__/graphics/icons/land-mine.png","solar-panel-equipment": "__base__/graphics/icons/solar-panel-equipment.png","fusion-reactor-equipment": "__base__/graphics/icons/fusion-reactor-equipment.png","battery-equipment": "__base__/graphics/icons/battery-equipment.png","battery-mk2-equipment": "__base__/graphics/icons/battery-mk2-equipment.png","belt-immunity-equipment": "__base__/graphics/icons/belt-immunity-equipment.png","exoskeleton-equipment": "__base__/graphics/icons/exoskeleton-equipment.png","personal-roboport-equipment": "__base__/graphics/icons/personal-roboport-equipment.png","personal-roboport-mk2-equipment": "__base__/graphics/icons/personal-roboport-mk2-equipment.png","night-vision-equipment": "__base__/graphics/icons/night-vision-equipment.png","energy-shield-equipment": "__base__/graphics/icons/energy-shield-equipment.png","energy-shield-mk2-equipment": "__base__/graphics/icons/energy-shield-mk2-equipment.png","personal-laser-defense-equipment": "__base__/graphics/icons/personal-laser-defense-equipment.png","discharge-defense-equipment": "__base__/graphics/icons/discharge-defense-equipment.png","gun-turret": "__base__/graphics/icons/gun-turret.png","laser-turret": "__base__/graphics/icons/laser-turret.png","flamethrower-turret": "__base__/graphics/icons/flamethrower-turret.png","artillery-turret": "__base__/graphics/icons/artillery-turret.png","arithmetic-combinator": "__base__/graphics/icons/arithmetic-combinator.png","decider-combinator": "__base__/graphics/icons/decider-combinator.png","constant-combinator": "__base__/graphics/icons/constant-combinator.png","power-switch": "__base__/graphics/icons/power-switch.png","programmable-speaker": "__base__/graphics/icons/programmable-speaker.png","cool-lamp": "__melodys-lamps__/cool-lamp.png",}
fluids = {"fluid-unknown": "__core__/graphics/icons/unknown.png","water": "__base__/graphics/icons/fluid/water.png","steam": "__base__/graphics/icons/fluid/steam.png","sulfuric-acid": "__base__/graphics/icons/fluid/sulfuric-acid.png","crude-oil": "__base__/graphics/icons/fluid/crude-oil.png","heavy-oil": "__base__/graphics/icons/fluid/heavy-oil.png","light-oil": "__base__/graphics/icons/fluid/light-oil.png","petroleum-gas": "__base__/graphics/icons/fluid/petroleum-gas.png","lubricant": "__base__/graphics/icons/fluid/lubricant.png",}
virtuals = {"signal-unknown": "__core__/graphics/icons/unknown.png","signal-everything": "__base__/graphics/icons/signal/signal_everything.png","signal-anything": "__base__/graphics/icons/signal/signal_anything.png","signal-each": "__base__/graphics/icons/signal/signal_each.png","signal-red": "__base__/graphics/icons/signal/signal_red.png","signal-green": "__base__/graphics/icons/signal/signal_green.png","signal-blue": "__base__/graphics/icons/signal/signal_blue.png","signal-yellow": "__base__/graphics/icons/signal/signal_yellow.png","signal-pink": "__base__/graphics/icons/signal/signal_pink.png","signal-cyan": "__base__/graphics/icons/signal/signal_cyan.png","signal-white": "__base__/graphics/icons/signal/signal_white.png","signal-grey": "__base__/graphics/icons/signal/signal_grey.png","signal-black": "__base__/graphics/icons/signal/signal_black.png","signal-check": "__base__/graphics/icons/checked-green.png","signal-info": "__base__/graphics/icons/info.png","signal-dot": "__base__/graphics/icons/list-dot.png","signal-1": "__base__/graphics/icons/signal/signal_1.png","signal-2": "__base__/graphics/icons/signal/signal_2.png","signal-3": "__base__/graphics/icons/signal/signal_3.png","signal-4": "__base__/graphics/icons/signal/signal_4.png","signal-5": "__base__/graphics/icons/signal/signal_5.png","signal-6": "__base__/graphics/icons/signal/signal_6.png","signal-7": "__base__/graphics/icons/signal/signal_7.png","signal-8": "__base__/graphics/icons/signal/signal_8.png","signal-9": "__base__/graphics/icons/signal/signal_9.png","signal-0": "__base__/graphics/icons/signal/signal_0.png","signal-A": "__base__/graphics/icons/signal/signal_A.png","signal-B": "__base__/graphics/icons/signal/signal_B.png","signal-C": "__base__/graphics/icons/signal/signal_C.png","signal-D": "__base__/graphics/icons/signal/signal_D.png","signal-E": "__base__/graphics/icons/signal/signal_E.png","signal-F": "__base__/graphics/icons/signal/signal_F.png","signal-G": "__base__/graphics/icons/signal/signal_G.png","signal-H": "__base__/graphics/icons/signal/signal_H.png","signal-I": "__base__/graphics/icons/signal/signal_I.png","signal-J": "__base__/graphics/icons/signal/signal_J.png","signal-K": "__base__/graphics/icons/signal/signal_K.png","signal-L": "__base__/graphics/icons/signal/signal_L.png","signal-M": "__base__/graphics/icons/signal/signal_M.png","signal-N": "__base__/graphics/icons/signal/signal_N.png","signal-O": "__base__/graphics/icons/signal/signal_O.png","signal-P": "__base__/graphics/icons/signal/signal_P.png","signal-Q": "__base__/graphics/icons/signal/signal_Q.png","signal-R": "__base__/graphics/icons/signal/signal_R.png","signal-S": "__base__/graphics/icons/signal/signal_S.png","signal-T": "__base__/graphics/icons/signal/signal_T.png","signal-U": "__base__/graphics/icons/signal/signal_U.png","signal-V": "__base__/graphics/icons/signal/signal_V.png","signal-W": "__base__/graphics/icons/signal/signal_W.png","signal-X": "__base__/graphics/icons/signal/signal_X.png","signal-Y": "__base__/graphics/icons/signal/signal_Y.png","signal-Z": "__base__/graphics/icons/signal/signal_Z.png",}

base = "C:/Program Files (x86)/Steam/steamapps/common/Factorio/data/base/"
core = "C:/Program Files (x86)/Steam/steamapps/common/Factorio/data/core/"
out = []
def imgpalette(image):
    img = Image.open(image).convert("RGBA", colors=16).crop((0,0,64,64))
    img = img.convert('P', palette=Image.ADAPTIVE, colors=4).convert("RGBA")
    # palette = paletted.getpalette()
    # color_counts = sorted(paletted.getcolors(), reverse=True)
    
    # palette_index = color_counts[1][1]
    # dominant_color = palette[palette_index*3:palette_index*3+3]
    # return tuple(dominant_color)
    pixels = img.getcolors(64 * 64)
    #Sort them by count number(first element of tuple)
    sorted_pixels = sorted(pixels, key=lambda t: t[0])
    sorted_pixels.reverse()
    #Get the most frequent color
    for color in sorted_pixels:
        if color[1][0] > 2 and color[1][1] > 2 and color[1][2] > 2 and color[1][3] > 200:
            # img.show()
            return color[1]
    return (0,0,0)
for k,v in items.items():
    try:
        dominant_color = imgpalette(v.replace("__base__", base).replace("__core__", core))
        print(k, dominant_color)
        
        out.append({"type":"item", "name":k, "color":{"r":dominant_color[0],"g":dominant_color[1],"b":dominant_color[2],"a":255}})
    except FileNotFoundError:
        pass
for k,v in fluids.items():
    try:
        dominant_color = imgpalette(v.replace("__base__", base).replace("__core__", core))
        print(k, dominant_color)
        out.append({"type":"fluid", "name":k, "color":{"r":dominant_color[0],"g":dominant_color[1],"b":dominant_color[2],"a":255}})
    except FileNotFoundError:
        pass
# for k,v in virtuals.items():
#     dominant_color = imgpalette(v.replace("__base__", base).replace("__core__", core))
#     print(k, dominant_color)
#     out.append({"type":"virtual", "name":k, "color":{"r":dominant_color[0],"g":dominant_color[1],"b":dominant_color[2],"a":255}})
lua = "--auto-computed by colorcompute.py\ncolormapping = {"
for item in out:
    dum = json.dumps(item)
    dum = re.sub(r'(?<!: )"(\S*?)"', '\\1', dum).replace(": ", "=")
    lua += dum + ","
lua += "}"
with open("computedcolors.lua", "w+") as f:
    f.write(lua)